{"version":3,"sources":["Comp.js","App.js","Car.js","index.js"],"names":["Comp","props","getInput","event","setState","userAns","target","value","getUserAns","n","name","v","submitHandler","preventDefault","u","state","correctAns","ans","Number","errorText","resultText","color","x","y","getNumbers","bind","n1","Math","floor","random","n2","this","className","onClick","type","onChange","React","Component","App","Car","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNA4FeA,E,kDAxFX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAsBVC,SAAW,SAACC,GACR,EAAKC,SAAS,CACVC,QAASF,EAAMG,OAAOC,SAzBX,EA4BnBC,WAAa,SAACL,GACV,IAAIM,EAAIN,EAAMG,OAAOI,KACjBC,EAAIR,EAAMG,OAAOC,MACrB,EAAKH,SAAL,eAAgBK,EAAGE,KA/BJ,EAiCnBC,cAAgB,SAACT,GACbA,EAAMU,iBACN,IAAIC,EAAI,EAAKC,MAAMV,QACfW,EAAa,EAAKD,MAAME,IACvBC,OAAOJ,IAKR,EAAKV,SAAS,CACVe,UAAW,aAEXD,OAAOJ,KAAOE,EACd,EAAKZ,SAAS,CACVgB,WAAY,sBAGhB,EAAKhB,SAAS,CACVgB,WAAY,mCAAqCJ,KAbzD,EAAKZ,SAAS,CACVe,UAAW,6BArCnB,EAAKJ,MAAQ,CACTM,MAAO,MAEPC,EAAG,EACHC,EAAG,EACHN,IAAK,EACLZ,QAAS,GACTc,UAAW,GACXC,WAAY,IAEhB,EAAKI,WAAa,EAAKA,WAAWC,KAAhB,gBAZH,E,yDAef,IAAIC,EAAKC,KAAKC,MAAsB,GAAhBD,KAAKE,UACrBC,EAAKH,KAAKC,MAAsB,GAAhBD,KAAKE,UACzBE,KAAK3B,SAAS,CACVkB,EAAGI,EACHH,EAAGO,EACHb,IAAKS,EAAKI,M,+BAqCd,OACI,yBAAKE,UAAU,QACX,yCAAeD,KAAKhB,MAAMM,OAC1B,6CAAmBU,KAAKhB,MAAMO,GAC9B,4BAAQW,QAASF,KAAKP,YAAtB,SACA,kCAAQO,KAAKhB,MAAMO,EAAnB,YAA+BS,KAAKhB,MAAMQ,GAC1C,sCAAYQ,KAAKhB,MAAME,KAEvB,2BAAOiB,KAAK,OAAOxB,KAAK,UAAUyB,SAAUJ,KAAKvB,aACjD,4BAAQyB,QAASF,KAAKnB,eAAtB,UACA,6CAAmBmB,KAAKhB,MAAMV,SAC9B,2CAAiB0B,KAAKhB,MAAMK,YAC5B,0CAAgBW,KAAKhB,MAAMI,gB,GAvExBiB,IAAMC,W,MCQVC,MANf,WACE,OACE,kBAAC,EAAD,OCKWC,MATf,WACI,OACI,sCCCRC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.ef49057f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Comp extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            color: \"red\",\r\n            // declare varaiables initially\r\n            x: 0,\r\n            y: 0, \r\n            ans: 0,\r\n            userAns: '',\r\n            errorText: '',\r\n            resultText: ''\r\n        };\r\n        this.getNumbers = this.getNumbers.bind(this); // we need this\r\n    }\r\n    getNumbers() {\r\n        var n1 = Math.floor(Math.random() * 10);\r\n        var n2 = Math.floor(Math.random() * 10);\r\n        this.setState({ // we need this\r\n            x: n1,\r\n            y: n2,\r\n            ans: n1 + n2\r\n        });\r\n    }\r\n    getInput = (event) => {\r\n        this.setState({\r\n            userAns: event.target.value\r\n        });\r\n    }\r\n    getUserAns = (event) => {\r\n        let n = event.target.name;\r\n        let v = event.target.value;\r\n        this.setState({[n]:v});\r\n    }\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        let u = this.state.userAns;\r\n        let correctAns = this.state.ans;\r\n        if (!Number(u)) {\r\n            this.setState({\r\n                errorText: \"You must enter a number\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                errorText: \"All good\"\r\n            });\r\n            if (Number(u) === correctAns) {\r\n                this.setState({\r\n                    resultText: \"CORRECT ANSWER!!!\"\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    resultText: \"UNLUGGY, the correct answer was \" + correctAns\r\n                })                \r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"Comp\">\r\n                <p>hello Comp {this.state.color}</p>\r\n                <p>this number is {this.state.x}</p>\r\n                <button onClick={this.getNumbers}>click</button> \r\n                <p>x = {this.state.x} and y = {this.state.y}</p>\r\n                <p>x + y = {this.state.ans}</p>\r\n\r\n                <input type='text' name='userAns' onChange={this.getUserAns}></input>\r\n                <button onClick={this.submitHandler}>submit</button>\r\n                <p>user answer is {this.state.userAns}</p>\r\n                <p>Result Text: {this.state.resultText}</p>\r\n                <p>Error Text: {this.state.errorText}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n/*\r\nfunction Comp() {\r\n  return (\r\n    <div className=\"Comp\">\r\n\r\n        hello Comp\r\n    </div>\r\n  );\r\n}\r\n*/\r\n\r\nexport default Comp;\r\n","import React from 'react';\nimport Comp from './Comp.js';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Comp />      \n  );\n}\n\nexport default App;\n","import React from 'react';\r\n\r\nfunction Car() {\r\n    return (\r\n        <div>\r\n            Cars\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default Car;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Car from './Car';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <Car />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}